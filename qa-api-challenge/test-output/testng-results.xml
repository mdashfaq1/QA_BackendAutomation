<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="7762" started-at="2021-11-21T22:42:26Z" finished-at="2021-11-21T22:42:34Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="7762" started-at="2021-11-21T22:42:26Z" finished-at="2021-11-21T22:42:34Z">
      <class name="com.qa.api.challenge.tests.CurrencyListApiSchemaTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qa.api.challenge.tests.CurrencyListApiSchemaTest@43814d18]" name="setUp" is-config="true" duration-ms="23" started-at="2021-11-21T22:42:26Z" finished-at="2021-11-21T22:42:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="test_currencylist_api_response_is_200_Ok()[pri:14, instance:com.qa.api.challenge.tests.CurrencyListApiSchemaTest@43814d18]" name="test_currencylist_api_response_is_200_Ok" duration-ms="7708" started-at="2021-11-21T22:42:26Z" finished-at="2021-11-21T22:42:34Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Response body doesn't match expectation.
Expected: The content to match the given JSON schema.
error: instance type (string) does not match any allowed primitive type (allowed: ["integer"])
    level: "error"
    schema: {"loadingURI":"#","pointer":"/properties/base/properties/symbol"}
    instance: {"pointer":"/base/symbol"}
    domain: "validation"
    keyword: "type"
    found: "string"
    expected: ["integer"]

  Actual: {"base":{"symbol":"SAR","name":"Saudi Riyal","name_ar":"\u0631\u064a\u0627\u0644 \u0633\u0639\u0648\u062f\u064a","symbol_native":"\u0631.\u0633.\u200f","decimal_digits":2,"rounding":0,"code":"SAR","name_plural":"Saudi riyals"},"equivalent":[{"symbol":"SAR","name":"Saudi Riyal","name_ar":"\u0631\u064a\u0627\u0644 \u0633\u0639\u0648\u062f\u064a","symbol_native":"\u0631.\u0633.\u200f","decimal_digits":2,"rounding":0,"code":"SAR","name_plural":"Saudi riyals","rate":1,"Rate":1,"date":"2021-11-20 10:00:43"},{"symbol":"AED","name":"United Arab Emirates Dirham","name_ar":"\u062f\u0631\u0647\u0645 \u0627\u0645\u0627\u0631\u0627\u062a\u064a","symbol_native":"\u062f.\u0625.\u200f","decimal_digits":2,"rounding":0,"code":"AED","name_plural":"UAE dirhams","rate":0.979141,"Rate":0.979141,"date":"2021-11-20 10:00:04"},{"symbol":"QAR","name":"Qatari Rial","name_ar":"\u0631\u064a\u0627\u0644 \u0642\u0637\u0631\u064a","symbol_native":"\u0631.\u0642.\u200f","decimal_digits":2,"rounding":0,"code":"QAR","name_plural":"Qatari rials","rate":0.970637,"Rate":0.970637,"date":"2021-11-20 10:00:04"},{"symbol":"KWD","name":"Kuwaiti Dinar","name_ar":"\u062f\u064a\u0646\u0627\u0631 \u0643\u0648\u064a\u062a\u064a","symbol_native":"\u062f.\u0643.\u200f","decimal_digits":3,"rounding":0,"code":"KWD","name_plural":"Kuwaiti dinars","rate":0.080665,"Rate":0.080665,"date":"2021-11-20 10:00:04"},{"symbol":"BHD","name":"Bahraini Dinar","name_ar":"\u062f\u064a\u0646\u0627\u0631 \u0628\u062d\u0631\u064a\u0646\u064a","symbol_native":"\u062f.\u0628.\u200f","decimal_digits":3,"rounding":0,"code":"BHD","name_plural":"Bahraini dinars","rate":0.100538,"Rate":0.100538,"date":"2021-11-20 10:00:04"},{"symbol":"$","name":"US Dollar","name_ar":"\u062f\u0648\u0644\u0627\u0631 \u0623\u0645\u0631\u064a\u0643\u064a","symbol_native":"$","decimal_digits":2,"rounding":0,"code":"USD","name_plural":"US dollars","rate":0.266582,"Rate":0.266582,"date":"2021-11-20 10:00:04"},{"symbol":"\u20ac","name":"Euro","name_ar":"\u064a\u0648\u0631\u0648","symbol_native":"\u20ac","decimal_digits":2,"rounding":0,"code":"EUR","name_plural":"euros","rate":0.236326,"Rate":0.236326,"date":"2021-11-20 10:00:04"},{"symbol":"\u00a3","name":"British Pound Sterling","name_ar":"\u0627\u0644\u062c\u0646\u064a\u0647 \u0627\u0644\u0627\u0633\u062a\u0631\u0644\u064a\u0646\u064a","symbol_native":"\u00a3","decimal_digits":2,"rounding":0,"code":"GBP","name_plural":"British pounds sterling","rate":0.198276,"Rate":0.198276,"date":"2021-11-20 10:00:04"},{"symbol":"EGP","name":"Egyptian Pound","name_ar":"\u062c\u0646\u064a\u0647 \u0645\u0635\u0631\u064a","symbol_native":"\u062c.\u0645.\u200f","decimal_digits":2,"rounding":0,"code":"EGP","name_plural":"Egyptian pounds","rate":4.186891,"Rate":4.186891,"date":"2021-11-20 10:01:17"},{"symbol":"\u20b9","name":"Indian Rupee","name_ar":"\u0631\u0648\u0628\u064a\u0629 \u0647\u0646\u062f\u064a\u0629","symbol_native":"\u20b9","decimal_digits":2,"rounding":0,"code":"INR","name_plural":"Indian rupees","rate":19.809966,"Rate":19.809966,"date":"2021-11-20 10:01:17"}],"failed":[]}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Response body doesn't match expectation.
Expected: The content to match the given JSON schema.
error: instance type (string) does not match any allowed primitive type (allowed: ["integer"])
    level: "error"
    schema: {"loadingURI":"#","pointer":"/properties/base/properties/symbol"}
    instance: {"pointer":"/base/symbol"}
    domain: "validation"
    keyword: "type"
    found: "string"
    expected: ["integer"]

  Actual: {"base":{"symbol":"SAR","name":"Saudi Riyal","name_ar":"\u0631\u064a\u0627\u0644 \u0633\u0639\u0648\u062f\u064a","symbol_native":"\u0631.\u0633.\u200f","decimal_digits":2,"rounding":0,"code":"SAR","name_plural":"Saudi riyals"},"equivalent":[{"symbol":"SAR","name":"Saudi Riyal","name_ar":"\u0631\u064a\u0627\u0644 \u0633\u0639\u0648\u062f\u064a","symbol_native":"\u0631.\u0633.\u200f","decimal_digits":2,"rounding":0,"code":"SAR","name_plural":"Saudi riyals","rate":1,"Rate":1,"date":"2021-11-20 10:00:43"},{"symbol":"AED","name":"United Arab Emirates Dirham","name_ar":"\u062f\u0631\u0647\u0645 \u0627\u0645\u0627\u0631\u0627\u062a\u064a","symbol_native":"\u062f.\u0625.\u200f","decimal_digits":2,"rounding":0,"code":"AED","name_plural":"UAE dirhams","rate":0.979141,"Rate":0.979141,"date":"2021-11-20 10:00:04"},{"symbol":"QAR","name":"Qatari Rial","name_ar":"\u0631\u064a\u0627\u0644 \u0642\u0637\u0631\u064a","symbol_native":"\u0631.\u0642.\u200f","decimal_digits":2,"rounding":0,"code":"QAR","name_plural":"Qatari rials","rate":0.970637,"Rate":0.970637,"date":"2021-11-20 10:00:04"},{"symbol":"KWD","name":"Kuwaiti Dinar","name_ar":"\u062f\u064a\u0646\u0627\u0631 \u0643\u0648\u064a\u062a\u064a","symbol_native":"\u062f.\u0643.\u200f","decimal_digits":3,"rounding":0,"code":"KWD","name_plural":"Kuwaiti dinars","rate":0.080665,"Rate":0.080665,"date":"2021-11-20 10:00:04"},{"symbol":"BHD","name":"Bahraini Dinar","name_ar":"\u062f\u064a\u0646\u0627\u0631 \u0628\u062d\u0631\u064a\u0646\u064a","symbol_native":"\u062f.\u0628.\u200f","decimal_digits":3,"rounding":0,"code":"BHD","name_plural":"Bahraini dinars","rate":0.100538,"Rate":0.100538,"date":"2021-11-20 10:00:04"},{"symbol":"$","name":"US Dollar","name_ar":"\u062f\u0648\u0644\u0627\u0631 \u0623\u0645\u0631\u064a\u0643\u064a","symbol_native":"$","decimal_digits":2,"rounding":0,"code":"USD","name_plural":"US dollars","rate":0.266582,"Rate":0.266582,"date":"2021-11-20 10:00:04"},{"symbol":"\u20ac","name":"Euro","name_ar":"\u064a\u0648\u0631\u0648","symbol_native":"\u20ac","decimal_digits":2,"rounding":0,"code":"EUR","name_plural":"euros","rate":0.236326,"Rate":0.236326,"date":"2021-11-20 10:00:04"},{"symbol":"\u00a3","name":"British Pound Sterling","name_ar":"\u0627\u0644\u062c\u0646\u064a\u0647 \u0627\u0644\u0627\u0633\u062a\u0631\u0644\u064a\u0646\u064a","symbol_native":"\u00a3","decimal_digits":2,"rounding":0,"code":"GBP","name_plural":"British pounds sterling","rate":0.198276,"Rate":0.198276,"date":"2021-11-20 10:00:04"},{"symbol":"EGP","name":"Egyptian Pound","name_ar":"\u062c\u0646\u064a\u0647 \u0645\u0635\u0631\u064a","symbol_native":"\u062c.\u0645.\u200f","decimal_digits":2,"rounding":0,"code":"EGP","name_plural":"Egyptian pounds","rate":4.186891,"Rate":4.186891,"date":"2021-11-20 10:01:17"},{"symbol":"\u20b9","name":"Indian Rupee","name_ar":"\u0631\u0648\u0628\u064a\u0629 \u0647\u0646\u062f\u064a\u0629","symbol_native":"\u20b9","decimal_digits":2,"rounding":0,"code":"INR","name_plural":"Indian rupees","rate":19.809966,"Rate":19.809966,"date":"2021-11-20 10:01:17"}],"failed":[]}

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:98)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:238)
at io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:293)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)
at com.qa.api.challenge.tests.CurrencyListApiSchemaTest.test_currencylist_api_response_is_200_Ok(CurrencyListApiSchemaTest.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_currencylist_api_response_is_200_Ok -->
      </class> <!-- com.qa.api.challenge.tests.CurrencyListApiSchemaTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
